// ========== –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° TELEGRAM WEB APP ==========

class TelegramWebAppIntegration {
    constructor() {
        this.tg = window.Telegram?.WebApp;
        this.isInTelegram = !!this.tg;
        this.adminData = null;
        this.isAdmin = false;
        
        this.init();
    }
    
    init() {
        if (!this.isInTelegram) {
            console.warn('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –≤ Telegram WebApp');
            return;
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebApp
        this.tg.ready();
        this.tg.expand();
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Ç–µ–º—ã
        this.tg.setHeaderColor('#1a1a1a');
        this.tg.setBackgroundColor('#0f0f0f');
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        this.userId = this.tg.initDataUnsafe?.user?.id;
        this.username = this.tg.initDataUnsafe?.user?.username;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ URL
        this.isAdmin = window.location.pathname.includes('admin-panel');
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        this.tg.BackButton.onClick(() => {
            this.tg.close();
        });
        
        if (this.isAdmin) {
            this.tg.BackButton.show();
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
        this.startStatusUpdate();
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç—É
    sendToBot(action, data = {}) {
        if (!this.isInTelegram) {
            console.warn('–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–Ω–µ Telegram WebApp');
            return;
        }
        
        const payload = {
            action: action,
            user_id: this.userId,
            timestamp: new Date().toISOString(),
            ...data
        };
        
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç—É:', payload);
        this.tg.sendData(JSON.stringify(payload));
    }
    
    // –í—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    selectAdmin(adminId, adminTag) {
        this.sendToBot('select_admin', {
            admin_id: adminId,
            admin_tag: adminTag
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.tg.showAlert(`–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É #${adminTag}`);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        setTimeout(() => {
            this.tg.close();
        }, 1500);
    }
    
    // –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏)
    acceptRequest(userId) {
        this.sendToBot('admin_action', {
            sub_action: 'accept_request',
            user_id: userId
        });
        
        this.tg.showAlert('–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç');
        this.refreshPage();
    }
    
    // –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏)  
    rejectRequest(userId) {
        this.sendToBot('admin_action', {
            sub_action: 'reject_request',
            user_id: userId
        });
        
        this.tg.showAlert('–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω');
        this.refreshPage();
    }
    
    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
    endDialog(userId) {
        this.sendToBot('admin_action', {
            sub_action: 'end_dialog',
            user_id: userId
        });
        
        this.tg.showAlert('–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω');
        this.refreshPage();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    refreshPage() {
        setTimeout(() => {
            window.location.reload();
        }, 1000);
    }
    
    // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
    startStatusUpdate() {
        if (this.isAdmin) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            setInterval(() => {
                this.updateAdminPanel();
            }, 30000);
        } else {
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
            setInterval(() => {
                this.updateUserApp();
            }, 60000);
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    updateAdminPanel() {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...');
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    updateUserApp() {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∞–¥–º–∏–Ω–æ–≤
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    showError(message) {
        if (this.isInTelegram) {
            this.tg.showAlert(message);
        } else {
            alert(message);
        }
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(message, title = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ') {
        if (this.isInTelegram) {
            this.tg.showPopup({
                title: title,
                message: message,
                buttons: [{type: 'ok'}]
            });
        } else {
            alert(`${title}: ${message}`);
        }
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    showConfirmation(message, onConfirm, title = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ') {
        if (this.isInTelegram) {
            this.tg.showPopup({
                title: title,
                message: message,
                buttons: [
                    {type: 'ok', text: '–î–∞'},
                    {type: 'cancel', text: '–ù–µ—Ç'}
                ]
            }, (buttonId) => {
                if (buttonId === 'ok') {
                    onConfirm();
                }
            });
        } else {
            if (confirm(`${title}: ${message}`)) {
                onConfirm();
            }
        }
    }
    
    // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –≤–∞–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö
    vibrate() {
        if (this.isInTelegram && this.tg.HapticFeedback) {
            this.tg.HapticFeedback.impactOccurred('medium');
        }
    }
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    setMainButtonText(text, onClick) {
        if (this.isInTelegram && this.tg.MainButton) {
            this.tg.MainButton.setText(text);
            this.tg.MainButton.onClick(onClick);
            this.tg.MainButton.show();
        }
    }
    
    // –°–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    hideMainButton() {
        if (this.isInTelegram && this.tg.MainButton) {
            this.tg.MainButton.hide();
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
window.tgWebApp = new TelegramWebAppIntegration();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
window.selectAdmin = (adminId, adminTag) => {
    window.tgWebApp.selectAdmin(adminId, adminTag);
};

window.acceptRequest = (userId) => {
    window.tgWebApp.showConfirmation(
        `–ü—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}?`,
        () => window.tgWebApp.acceptRequest(userId),
        '–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–ø—Ä–æ—Å–∞'
    );
};

window.rejectRequest = (userId) => {
    window.tgWebApp.showConfirmation(
        `–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}?`,
        () => window.tgWebApp.rejectRequest(userId),
        '–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞'
    );
};

window.endDialog = (userId) => {
    window.tgWebApp.showConfirmation(
        `–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${userId}?`,
        () => window.tgWebApp.endDialog(userId),
        '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞'
    );
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
function updateAdminsList(admins) {
    const container = document.getElementById('admin-cards-container');
    if (!container) return;
    
    container.innerHTML = '';
    
    if (admins.length === 0) {
        container.innerHTML = '<div class="no-admins">ü¶π‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</div>';
        return;
    }
    
    admins.forEach(admin => {
        const card = document.createElement('div');
        card.className = `admin-card admin-card--${admin.status}`;
        
        const statusIcon = admin.status === 'online' ? 'üü¢' : 
                          admin.status === 'away' ? 'üü°' : 'üî¥';
        
        const rating = '‚≠ê'.repeat(admin.rating);
        
        card.innerHTML = `
            <div class="admin-avatar">${admin.avatar || 'ü¶π‚Äç‚ôÇÔ∏è'}</div>
            <div class="admin-info">
                <h3 class="admin-name">#${admin.tag}</h3>
                <p class="admin-spec">${admin.specialization}</p>
                <div class="admin-status">
                    <span class="status-indicator">${statusIcon}</span>
                    <span class="response-time">${admin.responseTime}</span>
                </div>
                <div class="admin-rating">${rating}</div>
            </div>
            <div class="admin-actions">
                <button class="select-btn">–í—ã–±—Ä–∞—Ç—å</button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        
        card.addEventListener('click', () => {
            window.tgWebApp.vibrate();
            selectAdmin(admin.id, admin.tag);
        });
        
        container.appendChild(card);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            card.style.transition = 'all 0.3s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats(stats) {
    const onlineCount = document.getElementById('online-count');
    const totalCount = document.getElementById('total-count');
    const restCount = document.getElementById('rest-count');
    
    if (onlineCount) onlineCount.textContent = stats.online || 0;
    if (totalCount) totalCount.textContent = stats.total || 0;
    if (restCount) restCount.textContent = (stats.total - stats.online) || 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const statusText = document.querySelector('.status-text');
    if (statusText && stats.online === 0) {
        statusText.textContent = '–°–µ–π—á–∞—Å –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ';
    } else if (statusText && stats.online > 0) {
        statusText.textContent = `${stats.online} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä(–æ–≤) –æ–Ω–ª–∞–π–Ω`;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
function initializeAdminPanel(data) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞
    const adminName = document.querySelector('.admin-name');
    const adminStatus = document.querySelector('.admin-status');
    const adminAvatar = document.querySelector('.admin-avatar');
    
    if (adminName) adminName.textContent = `#${data.currentAdmin.tag}`;
    if (adminStatus) adminStatus.textContent = `üü¢ –û–Ω–ª–∞–π–Ω ‚Ä¢ ${data.currentAdmin.tag}`;
    if (adminAvatar) adminAvatar.textContent = data.currentAdmin.avatar;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
    const pendingCount = document.getElementById('pending-count');
    const activeDialogsCount = document.getElementById('active-dialogs-count');
    
    if (pendingCount) pendingCount.textContent = data.pendingRequests.length;
    if (activeDialogsCount) activeDialogsCount.textContent = data.activeDialogs.length;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
    updatePendingRequests(data.pendingRequests);
    updateActiveDialogs(data.activeDialogs);
    updateTodayStats(data.todayStats);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
function updatePendingRequests(requests) {
    const container = document.getElementById('pending-requests-list');
    if (!container) return;
    
    container.innerHTML = '';
    
    if (requests.length === 0) {
        container.innerHTML = '<div class="empty-state">üì≠ –ù–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</div>';
        return;
    }
    
    requests.forEach(request => {
        const card = document.createElement('div');
        card.className = `request-card priority-${request.priority}`;
        
        const priorityIcon = request.priority === 'high' ? 'üî¥' :
                            request.priority === 'medium' ? 'üü°' : 'üü¢';
        
        card.innerHTML = `
            <div class="request-header">
                <h4 class="user-name">#${request.userName}</h4>
                <span class="priority-badge">${priorityIcon} ${request.priority}</span>
            </div>
            <div class="request-info">
                <p class="request-category">üìÇ ${request.category}</p>
                <p class="request-message">${request.message}</p>
                <span class="waiting-time">‚è±Ô∏è –û–∂–∏–¥–∞–µ—Ç: ${request.waitingTime}</span>
            </div>
            <div class="request-actions">
                <button class="btn btn-accept" onclick="acceptRequest(${request.userId})">
                    ‚úÖ –ü—Ä–∏–Ω—è—Ç—å
                </button>
                <button class="btn btn-reject" onclick="rejectRequest(${request.userId})">
                    ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </button>
            </div>
        `;
        
        container.appendChild(card);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
function updateActiveDialogs(dialogs) {
    const container = document.getElementById('active-dialogs-list');
    if (!container) return;
    
    container.innerHTML = '';
    
    if (dialogs.length === 0) {
        container.innerHTML = '<div class="empty-state">üí¨ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤</div>';
        return;
    }
    
    dialogs.forEach(dialog => {
        const card = document.createElement('div');
        card.className = 'dialog-card';
        
        const unreadBadge = dialog.unreadCount > 0 ? 
            `<span class="unread-badge">${dialog.unreadCount}</span>` : '';
        
        const statusIcon = dialog.status === 'active' ? 'üü¢' : 'üü°';
        
        card.innerHTML = `
            <div class="dialog-header">
                <h4 class="user-name">#${dialog.userName}</h4>
                ${unreadBadge}
                <span class="dialog-status">${statusIcon}</span>
            </div>
            <div class="dialog-info">
                <p class="last-message">${dialog.lastMessage}</p>
                <div class="dialog-meta">
                    <span class="dialog-time">${new Date(dialog.startTime).toLocaleDateString('ru-RU')}</span>
                    <button class="btn btn-sm btn-end" onclick="endDialog(${dialog.userId})">
                        üö´ –ó–∞–≤–µ—Ä—à–∏—Ç—å
                    </button>
                </div>
            </div>
        `;
        
        container.appendChild(card);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–Ω—è
function updateTodayStats(stats) {
    const elements = {
        'total-requests': stats.totalRequests,
        'accepted-requests': stats.acceptedRequests,
        'rejected-requests': stats.rejectedRequests,
        'avg-response-time': stats.avgResponseTime
    };
    
    Object.entries(elements).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) {
            element.textContent = value;
        }
    });
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º
function formatTime(timestamp) {
    const date = new Date(timestamp);
    return date.toLocaleTimeString('ru-RU', {
        hour: '2-digit',
        minute: '2-digit'
    });
}

function timeAgo(timestamp) {
    const now = new Date();
    const time = new Date(timestamp);
    const diff = Math.floor((now - time) / 1000);
    
    if (diff < 60) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diff < 3600) return `${Math.floor(diff / 60)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    if (diff < 86400) return `${Math.floor(diff / 3600)} —á –Ω–∞–∑–∞–¥`;
    return `${Math.floor(diff / 86400)} –¥–Ω –Ω–∞–∑–∞–¥`;
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
function applyTheme() {
    if (window.tgWebApp.isInTelegram) {
        const tg = window.tgWebApp.tg;
        document.documentElement.style.setProperty('--tg-bg-color', tg.backgroundColor);
        document.documentElement.style.setProperty('--tg-text-color', tg.textColor);
        document.documentElement.style.setProperty('--tg-hint-color', tg.hintColor);
        document.documentElement.style.setProperty('--tg-link-color', tg.linkColor);
        document.documentElement.style.setProperty('--tg-button-color', tg.buttonColor);
        document.documentElement.style.setProperty('--tg-button-text-color', tg.buttonTextColor);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    applyTheme();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navItems = document.querySelectorAll('.nav-item');
    navItems.forEach(item => {
        item.addEventListener('click', function() {
            const screenId = this.dataset.screen;
            if (screenId) {
                showScreen(screenId);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
                navItems.forEach(nav => nav.classList.remove('active'));
                this.classList.add('active');
            }
        });
    });
});

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–æ–≤
function showScreen(screenId) {
    const screens = document.querySelectorAll('.screen');
    screens.forEach(screen => {
        screen.classList.remove('active');
    });
    
    const targetScreen = document.getElementById(`${screenId}-screen`);
    if (targetScreen) {
        targetScreen.classList.add('active');
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(event) {
    console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:', event.error);
    if (window.tgWebApp && window.tgWebApp.isInTelegram) {
        window.tgWebApp.showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏');
    }
});

console.log('Telegram WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');